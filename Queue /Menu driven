#include <stdio.h>
#define MAX 5

int queue[MAX];
int front = -1;
int rear = -1;

int isEmpty()
{
    return front == -1;
}

void enqueue(int data)
{
    if (rear == MAX - 1)
    {
        printf("Queue is full!\n");
    }
    else
    {
        if (front == -1)
        { // If the queue is empty
            front = 0;
        }
        rear++;
        queue[rear] = data;
        printf("Enqueued: %d\n", data);
    }
}

int dequeue() {
    int data;
    
    if (isEmpty()) {
        printf("Queue is empty! Dequeue operation cannot be performed.\n");
        return 0;
    } else {
        data = queue[front];
        
        if (front == rear) {
            front = rear = -1; 
        } else {
            front++; 
        }
    }
    
    return data;
}

void display()
{
    if (isEmpty())
    {
        printf("Queue is empty!\n");
    }
    else
    {
        printf("Queue elements are: ");
        for (int i = front; i <= rear; i++)
        {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}

int main()
{
    int data, choice;
    int exit = 1;
    while (exit != 0)
    {
        printf("\n1.enqueue\n");
        printf("2. dequeue\n");
        printf("3. Print all elements \n");
        printf("4. Quit \n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice)

        {
        case 1:
            printf("Enter the data you want to enqueue : ");
            scanf("%d", &data);
            enqueue(data);
            break;

        case 2:
            dequeue();
            break;

        case 3:
            display();
            break;

        case 4:
            exit = 0;
            break;

        default:
            printf("Invalid choice! Please enter a valid option.\n");
        }
    }

    return 0;
}
